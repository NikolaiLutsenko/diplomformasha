@using DiplomaWork.Models.Constants
@using DiplomaWork.Models.Employees
@model IEnumerable<EmployeeModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1>Сотрудники</h1>
    @if (User.IsInRole(RoleConstants.Admin) || User.IsInRole(RoleConstants.HrManager))
    {
        <p>
            <a asp-controller="Account" asp-action="Register">Добавить</a>
        </p>
    }
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Services)
                </th>
                <th>@Html.DisplayNameFor(model => model.Roles)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model)
            {
                <tr>
                    <td class="text-left">
                        @Html.DisplayNameFor(x => x.UserName): @Html.DisplayFor(x => item.UserName)
                        <br>
                        @Html.DisplayNameFor(x => x.Email): @Html.DisplayFor(x => item.Email)
                        <br>
                        @Html.DisplayNameFor(x => x.CountOfRequests): @Html.DisplayFor(x => item.CountOfRequests)
                    </td>
                    <td class="text-left">
                        @foreach (var groupedService in item.Services.GroupBy(x => x.Category.Name))
                        {
                            @groupedService.Key
                            <ul>
                                @foreach (var service in groupedService)
                                {
                                    <li>@service.Name</li>
                                }
                            </ul>
                        }
                    </td>
                    <td class="text-left">
                        @foreach (var role in item.Roles.OrderBy(x => x.Length))
                        {
                            @role
                            <br />
                        }
                    </td>
                    <td>
                        <form asp-controller="Employees" asp-action="Delete" method="post">
                            <a asp-controller="Employees" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-link">Редактировать</a>
                            <br />
                            <a asp-controller="Employees" asp-action="Details" asp-route-id="@item.Id" class="btn btn-link">Детали</a>
                            @if (User.IsInRole(RoleConstants.Admin))
                            {
                                <input type="hidden" name="Id" value="@item.Id" class="btn btn-link" />
                                <br />
                                <button type="submit" class="btn btn-link">Удалить</button>
                            }

                            @if (User.IsInRole(RoleConstants.Admin) || User.IsInRole(RoleConstants.HrManager))
                            {
                                <br />
                                <a asp-controller="Roles" asp-action="EditEmployeeRoles" asp-route-id="@item.Id" class="btn btn-link">Управление ролями</a>
                            }
                        </form>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
